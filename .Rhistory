pivot_longer(names_to = "team", values_to = "gender" , -c(id, decision)) %>%
mutate(replicate = rep(1:16, each = 48))
gender_promotions_shuffles <- read_csv("ch9_gender_promotions_shuffles.csv")
head(gender_promotions_shuffles)
shuffled_data_tidy  <- gender_promotions_shuffles %>%
pivot_longer(names_to = "team", values_to = "gender" , -c(id, decision)) %>%
mutate(replicate = rep(1:16, each = 48))
shuffled_data_tidy %>% group_by(replicate) %>% count(gender)
gender_promotions_shuffles %>%
gather(key = "team", value = "gender" , -c(id, decision)) %>%
mutate(replicate = rep(1:16, each = 48))
?rep
gender_promotions_shuffles %>%
gather(key = "team", value = "gender" , -c(id, decision)) %>%
mutate(replicate = rep(1:16, each = 48))
gender_promotions_shuffles %>%
gather(key = "team", value = "gender" , -c(id, decision)) %>%
mutate(replicate = rep(1:16, each = 48)) %>% group_by(replicate) %>% count(gender)
gender_promotions_shuffles %>%
gather(key = "team", value = "gender" , -c(id, decision)) %>%
mutate(replicate = rep(1:16, each = 48))
gender_promotions_shuffles %>%
pivot_longer(cols=-c(id, decision),names_to = "team", value_to = "gender") %>%
mutate(replicate = rep(1:16, each = 48))
gender_promotions_shuffles %>%
pivot_longer(cols=-c("id", "decision"),
names_to = "team", value_to = "gender") %>%
mutate(replicate = rep(1:16, each = 48))
gender_promotions_shuffles %>%
pivot_longer(cols=-c("id", "decision"),
names_to = "team", values_to = "gender") %>%
mutate(replicate = rep(1:16, each = 48))
gender_promotions_shuffles %>%
pivot_longer(cols=-c("id", "decision"),
names_to = "team", values_to = "gender") %>%
mutate(replicate = rep(1:16, times = 48))
gender_promotions_shuffles %>%
pivot_longer(cols=-c("id", "decision"),
names_to = "team", values_to = "gender") %>%
mutate(replicate = rep(1:16, times = 48)) %>% group_by(replicate) %>% count(gender)
shuffled_data_tidy  <- gender_promotions_shuffles %>%
pivot_longer(cols=-c("id", "decision"),
names_to = "team", values_to = "gender") %>%
mutate(replicate = rep(1:16, times = 48))
shuffled_data_tidy %>% group_by(replicate) %>% count(gender)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop) %>%
spread(gender, prop) %>%
mutate(stat = m - f)
head(shuffled_data_tidy,n=17)
shuffled_data_tidy %>% group_by(replicate) %>% count(gender)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop)
?pivot_wider
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop) %>%
pivot_wider(names_from="gender",values_from = prop)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop) %>%
pivot_wider(names_from="gender",values_from = prop)
shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop) %>%
pivot_wider(names_from="gender",values_from = prop) %>%
mutate(stat = m - f)
test_stats <- shuffled_data_tidy %>%
group_by(replicate) %>%
count(gender, decision) %>%
filter(decision == "promoted") %>%
mutate(prop = n / 24) %>%
select(replicate, gender, prop) %>%
pivot_wider(names_from="gender",values_from = prop) %>%
mutate(stat = m - f)
head(test_stats)
gplot(data = test_stats, aes(x = stat)) +
geom_histogram(binwidth = 0.1, fill = "cyan") +
geom_vline(xintercept = observed_test_statistic, color = "red", size = 1) +
labs(x = "Difference in promotion rates (male - female)")
ggplot(data = test_stats, aes(x = stat)) +
geom_histogram(binwidth = 0.1, fill = "cyan") +
geom_vline(xintercept = observed_test_statistic, color = "red", size = 1) +
labs(x = "Difference in promotion rates (male - female)")
ggplot(data = test_stats, aes(x = stat)) +
geom_histogram(binwidth = 0.1, fill = "cyan") +
geom_vline(xintercept = (21/24 -14/24 ), color = "red", size = 1) +
labs(x = "Difference in promotion rates (male - female)")
ggplot(data = test_stats, aes(x = stat)) +
geom_histogram(binwidth = 0.1, fill = "cyan", color = "black") +
geom_vline(xintercept = (21/24 -14/24 ), color = "red", size = 1) +
labs(x = "Difference in promotion rates (male - female)")
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
head(promotions)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
head(promotions)
?hypothesise
?calculate
null_dist <- promotions %>%
specify(formulat=decision~gender,success = "promoted") %>%
hypothesise(null="independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat="diff in props",order=c("male","female"))
null_dist <- promotions %>%
specify(formula=decision~gender,success = "promoted") %>%
hypothesise(null="independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat="diff in props",order=c("male","female"))
visualise(null_dist)
visualise(null_dist,bins=10)
obs_value <- promotions %>%
specify(formula=decision~gender,success = "promoted") %>%
calculate(stat="diff in props",order=c("male","female"))
null_distribution %>%
get_p_value(obs_stat = obs_diff_prop, direction = "right")
null_dist %>%
get_p_value(obs_stat = obs_diff_prop, direction = "right")
null_dist %>%
get_p_value(obs_stat = obs_value, direction = "right")
boot_dist <- promotions %>%
specify(formula=decision~gender,success = "promoted") %>%
#  hypothesise(null="independence") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat="diff in props",order=c("male","female"))
get_ci(boot_dist,type="percentile")
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(infer)
library(moderndive)
library(ggplot2movies)
set.seed(2511)
# In calculate() step replace "diff in means" with "diff in medians"
null_distribution_movies_median <- movies_sample %>%
specify(formula = rating ~ genre) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in medians", order = c("Action", "Romance"))
# compute observed "diff in medians"
obs_diff_medians <- movies_sample %>%
specify(formula = rating ~ genre) %>%
calculate(stat = "diff in medians", order = c("Action", "Romance"))
obs_diff_medians
# Visualize p-value. Observing this difference in medians under H0
# is very unlikely! Suggesting H0 is false, similarly to when we used
# "diff in means" as the test statistic.
visualize(null_distribution_movies_median, bins = 10) +
shade_p_value(obs_stat = obs_diff_medians, direction = "both")
# p-value is very small, just like when we used "diff in means"
# as the test statistic.
null_distribution_movies_median %>%
get_p_value(obs_stat = obs_diff_medians, direction = "both")
?facet_grid
?facet_wrap
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram() +
facet_wrap(vars(genre))+
labs(y = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram(bins=5) +
facet_wrap(vars(genre))+
labs(y = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram(bins=7) +
facet_wrap(vars(genre))+
labs(y = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram(bins=10) +
facet_wrap(vars(genre))+
labs(y = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram(bins=8) +
facet_wrap(vars(genre))+
labs(y = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram(bins=8) +
facet_wrap(vars(genre))+
labs(x = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_density() +
facet_wrap(vars(genre))+
labs(x = "IMDb rating")
ggplot(data = movies_sample, aes(x = rating)) +
geom_density() +
facet_wrap(vars(genre))+
labs(x = "IMDb rating") +
theme_classic()
ggplot(data = movies_sample, aes(x = rating)) +
geom_density() +
facet_wrap(vars(genre))+
labs(x = "IMDb rating") +
theme_classic(fill="cyan")
ggplot(data = movies_sample, aes(x = rating)) +
geom_density(fill="cyan") +
facet_wrap(vars(genre))+
labs(x = "IMDb rating") +
theme_classic()
action_romance <- movies %>%
filter(Action == 1 & Romance == 1)
ggplot(action_romance, aes(rating)) +
geom_histogram() +
facet_wrap(~Action)
head(action_romance)
action_romance <- movies %>%
select(title,year,rating,votes,Action,Romance)
action_romance <- movies %>%
head(action_romance)
action_romance <- movies %>%
select(title,year,rating,votes,Action,Romance) %>%
# Get rid of movies that are both
filter(!(Action == 1 & Romance == 1)) %>%
filter(Action == 1 | Romance == 1)
head(action_romance)
action_romance <- movies %>%
select(title,year,rating,votes,Action,Romance) %>%
# Get rid of movies that are both
filter(!(Action == 1 & Romance == 1)) %>%
filter(Action == 1 | Romance == 1) %>%
mutate(genre = case_when(
Action == 1 ~ "Action",
Romance == 1 ~ "Romance",
TRUE ~ "Neither"
))
head(action_romance)
action_romance <- movies %>%
select(title,year,rating,votes,Action,Romance) %>%
# Get rid of movies that are both
filter(!(Action == 1 & Romance == 1)) %>%
filter(Action == 1 | Romance == 1) %>%
mutate(genre = case_when(
Action == 1 ~ "Action",
Romance == 1 ~ "Romance",
TRUE ~ "Neither"
)) %>%
select(-Action,-Romance)
head(action_romance)
action_sample %>%
group_by(genre) %>%
summarize(n = n(), mean_rating = mean(rating), std_dev = sd(rating))
action_romance %>%
group_by(genre) %>%
summarize(n = n(), mean_rating = mean(rating), std_dev = sd(rating))
ggplot(data = movies_sample, aes(x = rating)) +
geom_density(fill="cyan") +
facet_wrap(~genre)+
labs(x = "IMDb rating") +
theme_classic()
ggplot(data = movies_sample, aes(x = rating)) +
geom_histogram(bins=8) +
facet_wrap(~genre)+
labs(x = "IMDb rating")
ggplot(data = action_romance, aes(x = rating)) +
geom_histogram(bins=8) +
facet_wrap(~genre)+
labs(x = "IMDb rating")
ggplot(data = action_romance, aes(x = rating)) +
geom_density() +
facet_wrap(~genre)+
labs(x = "IMDb rating")
ggplot(data = action_romance, aes(x = rating)) +
geom_density() +
facet_wrap(~genre)+
labs(x = "IMDb rating") +
theme_classic()
ggplot(data = action_romance, aes(x = genre,y=rating)) +
geom_boxplot() +
labs(y = "IMDb rating")
ggplot(data = action_romance, aes(x = genre,y=rating)) +
geom_boxplot() +
labs(y = "IMDb rating") +
theme_classic()
set.seed(2511)
# In calculate() step replace "diff in means" with "diff in medians"
boot_distribution_movies_median <- movies_sample %>%
specify(formula = rating ~ genre) %>%
#  hypothesize(null = "independence") %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in medians", order = c("Action", "Romance"))
visualize(null_distribution_movies_median, bins = 10)
visualize(boot_distribution_movies_median, bins = 10)
boot_distribution_movies_median %>%
get_ci(type="percentile")
boot_distribution_movies_median %>%
get_ci(level=.999,type="percentile")
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(infer)
library(moderndive)
library(ggplot2movies)
?get_ci
nyflights
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
head(flights)
carrier
airlines
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
str(flights)
airlines
set.seed(90)
flights %>%
select(arr_delay, carrier) %>%
filter(carrier=="DL",carrier=="UA")
set.seed(90)
flights %>%
select(arr_delay, carrier)
set.seed(90)
flights %>%
select(arr_delay, carrier) %>%
filter(carrier=="DL",carrier=="UA")
set.seed(90)
flights %>%
select(arr_delay, carrier) %>%
dplyr::filter(carrier=="DL",carrier=="UA")
set.seed(90)
flights %>%
select(arr_delay, carrier) %>%
filter(carrier%in%c("DL","UA"))
?slice_min
?sample_n
set.seed(90)
flights %>%
select(arr_delay, carrier) %>%
filter(carrier%in%c("DL","UA")) %>%
group_by(carrier) %>%
slice_sample(n=50)
set.seed(90)
flights %>%
select(arr_delay, carrier,origin) %>%
filter(carrier%in%c("DL","UA")) %>%
group_by(carrier) %>%
slice_sample(n=50)
set.seed(90)
flights %>%
select(arr_delay, carrier,origin) %>%
filter(carrier%in%c("DL","UA")) %>%
group_by(carrier) %>%
slice_sample(n=50) %>%
ungroup()
set.seed(90)
flight_sample <- flights %>%
select(arr_delay, carrier,origin) %>%
filter(carrier%in%c("DL","UA")) %>%
group_by(carrier) %>%
slice_sample(n=50) %>%
ungroup()
ggplot(data = flight_sample, aes(x = arr_delay)) +
geom_density(fill="cyan") +
facet_wrap(~carrier)+
labs(x = "Arrival Delay") +
theme_classic()
ggplot(data = flight_sample, aes(y = arr_delay, x= carrier)) +
geom_boxplot(fill="cyan") +
labs(x = "Arrival Delay") +
theme_classic()
flight_sample %>%
group_by(carrier) %>%
summarize(n = n(), mean_rating = mean(arr_delay), std_dev = sd(arr_delay))
flight_sample %>%
group_by(carrier) %>%
summarize(n = n(), mean_delay = mean(arr_delay), std_dev = sd(arr_delay))
# In calculate() step replace "diff in means" with "diff in medians"
null_distribution_flights_mean <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
hypothesize(null = "independence") %>%
#  generate(reps = 1000, type = "permute") %>%
calculate(stat = "t", order = c("DL", "UA"))
null_distribution_flights_mean
?get_p_value
vignette("infer")
# Get the null distribution
null_dist <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
assume("t")
null_dist
# Find observed difference
obs_flights_mean_diff <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
hypothesize(null = "independence") %>%
#  generate(reps = 1000, type = "permute") %>%
calculate(stat = "t", order = c("DL", "UA"))
visualize(null_dist)
visualize(null_dist) +
theme_classic()
visualize(null_dist) +
theme_classic() +
geom_vline(xintercept = obs_flights_mean_diff, col="red")
obs_flights_mean_diff
visualize(null_dist) +
theme_classic() +
shade_p_value(obs_stat = obs_flights_mean_diff, direction = "both")
#Get p-value
null_dist %>%
get_p_value(obs_stat = obs_flights_mean_diff, direction = "both")
# Get the null distribution
null_dist_permute <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in means", order = c("DL", "UA"))
# Find observed difference
obs_flights_mean_diff_permute <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
hypothesize(null = "independence") %>%
calculate(stat = "diff in means", order = c("DL", "UA"))
# Find observed difference
obs_flights_mean_diff_permute <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
calculate(stat = "diff in means", order = c("DL", "UA"))
visualize(null_dist_permute) +
theme_classic() +
shade_p_value(obs_stat = obs_flights_mean_diff_permute, direction = "both")
#Get p-value
null_dist_permute %>%
get_p_value(obs_stat = obs_flights_mean_diff_permute, direction = "both")
null_dist_permute %>%
get_ci(level=0.95,type="percentile")
# Get the null distribution
null_dist_permute_median <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in medians", order = c("DL", "UA"))
null_dist_permute_median %>%
get_ci(level=0.95,type="percentile")
# Get the null distribution
null_dist_permute_median <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
#  hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in medians", order = c("DL", "UA"))
# Get the null distribution
null_dist_permute_median <- flight_sample %>%
specify(formula = arr_delay ~ carrier) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "diff in medians", order = c("DL", "UA"))
library(knitr)
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
ggplot(data = flight_sample, aes(x = arr_delay)) +
geom_density(fill="cyan") +
facet_wrap(~carrier)+
labs(x = "Arrival Delay") +
theme_classic()
library(tidyverse)
library(infer)
library(moderndive)
library(nycflights13)
library(ggplot2movies)
set.seed(90)
flight_sample <- flights %>%
select(arr_delay, carrier,origin) %>%
filter(carrier%in%c("DL","UA")) %>%
group_by(carrier) %>%
slice_sample(n=50) %>%
ungroup()
ggplot(data = flight_sample, aes(x = arr_delay)) +
geom_density(fill="cyan") +
facet_wrap(~carrier)+
labs(x = "Arrival Delay") +
theme_classic()
